services:
  app:
    build:
      context: .                   # context is the project root
      dockerfile: docker-production/Dockerfile
    container_name: laravel_app
    env_file: .env                 # load environment variables from .env
    depends_on:
      - mysql
      - redis
    networks:
      - laravel-net
    # No ports exposed here (PHP-FPM port is internal), Nginx will proxy to it.
    # volumes: (not needed since code is in image and in Nginx container via mount)

  nginx:
    image: nginx:latest
    container_name: laravel_nginx
    depends_on:
      - app
    ports:
      - "8081:80"        # expose Nginx on localhost:8081
    volumes:
      - ./:/var/www
      - ./docker-production/nginx.conf:/etc/nginx/conf.d/default.conf
    networks:
      - laravel-net

  mysql:
    image: mysql:8.0
    container_name: laravel_mysql
    env_file: .env   # use .env for MySQL root password, etc.
    environment:
      # Alternatively, explicitly declare MySQL creds:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    volumes:
      - mysql_data:/var/lib/mysql
    networks:
      - laravel-net

  redis:
    image: redis:alpine
    container_name: laravel_redis
    networks:
      - laravel-net
    # (Default configuration is fine for local use; no password by default)

networks:
  laravel-net:
    driver: bridge

volumes:
  mysql_data:
