version: '3.8'

services:
  app:
    build:
      context: .
      dockerfile: ./docker-production/Dockerfile
    container_name: laravel_app
    restart: unless-stopped
    env_file: .env                        # Load Laravel environment variables
    environment:
      # Override host names to Docker service names:
      DB_HOST: mysql
      REDIS_HOST: redis
      APP_ENV: production
      APP_DEBUG: 'false'
    depends_on:
      - mysql
      - redis
    ports:
      - "80:80"        # Expose port 80 on host to web server
    # No volumes for code (code is baked into image for production)
    # You could add a volume for persistent storage if needed (e.g., for user uploads)

  mysql:
    image: mysql:8.0
    container_name: mysql
    restart: unless-stopped
    env_file: .env       # Use variables from .env for credentials
    environment:
      MYSQL_DATABASE: ${DB_DATABASE}
      MYSQL_USER: ${DB_USERNAME}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - mysql-data:/var/lib/mysql   # Persist MySQL data

  redis:
    image: redis:7-alpine
    container_name: redis
    restart: unless-stopped
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data   # Persist Redis data (for cache durability, optional)

volumes:
  mysql-data:
  redis-data:
